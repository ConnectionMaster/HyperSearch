// -----------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by:
//        The WPF ShaderEffect Generator
//        http://wpfshadergenerator.codeplex.com
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// -----------------------------------------------------------------------------
namespace HscLib.ShaderEffects
{
    using System;
    using System.Windows;
    using System.Windows.Media;
    using System.Windows.Media.Effects;
    using System.Windows.Media.Media3D;
    
    
    /// <summary>An effect that turns the input into shades of a single color.</summary>
    public class MonochromeEffect : System.Windows.Media.Effects.ShaderEffect
    {
        
        /// <summary></summary>
        public static readonly DependencyProperty InputSamplerProperty = ShaderEffect.RegisterPixelShaderSamplerProperty("InputSampler", typeof(MonochromeEffect), 0, SamplingMode.Auto);
        /// <summary>The color used to tint the input.</summary>
        public static readonly DependencyProperty FilterColorProperty = DependencyProperty.Register("FilterColor", typeof(System.Windows.Media.Color), typeof(MonochromeEffect), new PropertyMetadata(Color.FromArgb(255,0,0,0), PixelShaderConstantCallback(0)));
        
        public MonochromeEffect()
        {
            PixelShader pixelShader = new PixelShader();
            pixelShader.UriSource = new Uri("/HyperSearch;component/ShaderEffects/MonochromeEffect.ps", UriKind.Relative);
            this.PixelShader = pixelShader;
            this.UpdateShaderValue(InputSamplerProperty);
            this.UpdateShaderValue(FilterColorProperty);
            this.DdxUvDdyUvRegisterIndex = -1;
        }
        
        /// <summary></summary>
        public virtual System.Windows.Media.Brush InputSampler
        {
            get
            {
                return ((System.Windows.Media.Brush)(this.GetValue(InputSamplerProperty)));
            }
            set
            {
                this.SetValue(InputSamplerProperty, value);
            }
        }
        
        /// <summary>The color used to tint the input.</summary>
        public virtual System.Windows.Media.Color FilterColor
        {
            get
            {
                return ((System.Windows.Media.Color)(this.GetValue(FilterColorProperty)));
            }
            set
            {
                this.SetValue(FilterColorProperty, value);
            }
        }
    }
}
